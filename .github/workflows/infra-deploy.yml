name: Deploy infrastructure

on:
  push:
    branches:
      - main
    paths:
      - 'infra/**'
      - '.github/workflows/infra-deploy.yml'
  workflow_dispatch:

permissions:
  contents: read
  actions: write

env:
  AZURE_RESOURCE_GROUP_NAME: ${{ vars.AZURE_RESOURCE_GROUP_NAME }}
  AZURE_RESOURCE_GROUP_LOCATION: ${{ vars.AZURE_RESOURCE_GROUP_LOCATION }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Ensure jq is available
        shell: bash
        run: |
          set -euo pipefail
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y jq
          fi

      - name: Ensure resource group exists
        env:
          RESOURCE_GROUP_NAME: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
          RESOURCE_GROUP_LOCATION: ${{ env.AZURE_RESOURCE_GROUP_LOCATION }}
        shell: bash
        run: |
          set -euo pipefail
          if [[ -z "$RESOURCE_GROUP_NAME" ]]; then
            echo "::error::AZURE_RESOURCE_GROUP_NAME repository variable is not set."
            exit 1
          fi
          if [[ -z "$RESOURCE_GROUP_LOCATION" ]]; then
            echo "::error::AZURE_RESOURCE_GROUP_LOCATION repository variable is not set."
            exit 1
          fi

          az group create \
            --name "$RESOURCE_GROUP_NAME" \
            --location "$RESOURCE_GROUP_LOCATION" \
            --only-show-errors > /dev/null

      - name: Deploy Bicep templates
        id: deploy
        env:
          RESOURCE_GROUP_NAME: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
          DEPLOYMENT_NAME: iac-${{ github.run_id }}
        shell: bash
        run: |
          set -euo pipefail
          if [[ -z "$RESOURCE_GROUP_NAME" ]]; then
            echo "::error::AZURE_RESOURCE_GROUP_NAME repository variable is not set."
            exit 1
          fi

          az deployment group create \
            --name "$DEPLOYMENT_NAME" \
            --resource-group "$RESOURCE_GROUP_NAME" \
            --template-file infra/main.bicep \
            --parameters infra/main.bicepparam \
            --only-show-errors

          deployment_outputs=$(az deployment group show \
            --name "$DEPLOYMENT_NAME" \
            --resource-group "$RESOURCE_GROUP_NAME" \
            --query "properties.outputs" -o json)

          registry_name=$(jq -r '.containerRegistryName.value // empty' <<< "$deployment_outputs")
          login_server=$(jq -r '.containerRegistryLoginServer.value // empty' <<< "$deployment_outputs")

          if [[ -n "$registry_name" ]]; then
            echo "registryName=$registry_name" >> "$GITHUB_OUTPUT"
          fi
          if [[ -n "$login_server" ]]; then
            echo "loginServer=$login_server" >> "$GITHUB_OUTPUT"
          fi

      - name: Summarize deployment
        if: success()
        shell: bash
        run: |
          set -euo pipefail
          {
            echo "Deployment completed: ${{ env.AZURE_RESOURCE_GROUP_NAME }}"
            echo "Container Registry: ${{ steps.deploy.outputs.registryName || 'N/A' }}"
            echo "Registry Login Server: ${{ steps.deploy.outputs.loginServer || 'N/A' }}"
          } >> "$GITHUB_STEP_SUMMARY"

